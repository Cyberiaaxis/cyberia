{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useFetchApi = (url, method = 'get') => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (!url) return;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    };\n\n    const fetchData = async () => {\n      await axios.get(url, config).then(res => {\n        const result = res.data;\n        setData(result);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data\n  };\n};\n\n_s(useFetchApi, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\nexport default useFetchApi;","map":{"version":3,"sources":["C:/Users/Professional/projects/cyberia/theme/src/components/useFetchApi.js"],"names":["axios","useEffect","useState","useFetchApi","url","method","data","setData","config","headers","Accept","fetchData","get","then","res","result","catch","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAKC,MAAM,GAAG,KAAd,KAAwB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACG,GAAL,EAAU;AAEV,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,MAAM,EAAE;AAFH;AADE,KAAf;;AAOA,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMX,KAAK,CAACY,GAAN,CAAUR,GAAV,EAAcI,MAAd,EACLK,IADK,CACAC,GAAG,IAAI;AACT,cAAMC,MAAM,GAAGD,GAAG,CAACR,IAAnB;AACAC,QAAAA,OAAO,CAACQ,MAAD,CAAP;AACH,OAJK,EAKLC,KALK,CAKCC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAPK,CAAN;AAQH,KATD;;AAWAN,IAAAA,SAAS;AACZ,GAtBQ,EAsBN,CAACP,GAAD,CAtBM,CAAT;AAwBA,SAAO;AAAEE,IAAAA;AAAF,GAAP;AACH,CA5BD;;GAAMH,W;;AA8BN,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useFetchApi = (url,method = 'get') => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        if (!url) return;\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            }\n        }\n\n        const fetchData = async () => {\n            await axios.get(url,config)\n            .then(res => {\n                const result = res.data;\n                setData(result);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        };\n\n        fetchData();\n    }, [url]);\n\n    return { data };\n};\n\nexport default useFetchApi;\n"]},"metadata":{},"sourceType":"module"}