{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Professional\\\\projects\\\\cyberia\\\\theme\\\\src\\\\components\\\\Modal.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nexport default class Modal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = event => {\n      if (!event.target.dataset.target && !event.target.dataset.toggle) return false;\n      const elementTarget = event.target.dataset.target.substring(1);\n      const domNode = document.getElementById(elementTarget);\n\n      if (!domNode) {\n        this.setState({\n          [elementTarget]: {\n            show: false\n          }\n        });\n        return false;\n      } else {\n        this.setState({\n          [elementTarget]: {\n            show: true\n          }\n        });\n      }\n    };\n\n    this.state = {\n      show: false,\n      [this.props.id]: false\n    };\n    this.wrapperRef = /*#__PURE__*/React.createRef();\n    this.closeClick = this.closeClick.bind(this);\n  }\n\n  closeClick(event) {\n    const elementTarget = event.target.dataset.ref;\n    this.setState({\n      [elementTarget]: {\n        show: false\n      }\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside, true);\n  }\n\n  render() {\n    const elementTarget = this.state[this.props.id];\n    let show = elementTarget.show ? 'modal flipX open' : 'modal flipX';\n    const renderClass = {\n      id: this.props.id,\n      className: show\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, renderClass, {\n      ref: this.wrapperRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-backdrop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Hello World\", /*#__PURE__*/React.createElement(\"button\", {\n      className: \"close\",\n      onClick: this.closeClick,\n      \"data-ref\": this.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, this.props.body), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\nModal.propTypes = {\n  id: PropTypes.element.isRequired,\n  body: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["C:/Users/Professional/projects/cyberia/theme/src/components/Modal.js"],"names":["React","Component","ReactDOM","PropTypes","Modal","constructor","props","handleClickOutside","event","target","dataset","toggle","elementTarget","substring","domNode","document","getElementById","setState","show","state","id","wrapperRef","createRef","closeClick","bind","ref","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","renderClass","className","body","propTypes","element","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA6BnBC,kBA7BmB,GA6BEC,KAAK,IAAI;AAE1B,UAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBD,MAAtB,IAAgC,CAACD,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,MAA1D,EAAkE,OAAO,KAAP;AAElE,YAAMC,aAAa,GAAGJ,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBD,MAArB,CAA4BI,SAA5B,CAAsC,CAAtC,CAAtB;AAEA,YAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,aAAxB,CAAhB;;AAEA,UAAI,CAACE,OAAL,EAAc;AACV,aAAKG,QAAL,CAAc;AAAE,WAACL,aAAD,GAAiB;AAAEM,YAAAA,IAAI,EAAE;AAAR;AAAnB,SAAd;AAEA,eAAO,KAAP;AACH,OAJD,MAIO;AACH,aAAKD,QAAL,CAAc;AAAE,WAACL,aAAD,GAAiB;AAAEM,YAAAA,IAAI,EAAE;AAAR;AAAnB,SAAd;AACH;AAEJ,KA7CkB;;AAGf,SAAKC,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,KADG;AAET,OAAC,KAAKZ,KAAL,CAAWc,EAAZ,GAAiB;AAFR,KAAb;AAKA,SAAKC,UAAL,gBAAkBrB,KAAK,CAACsB,SAAN,EAAlB;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,CAACf,KAAD,EAAQ;AAEd,UAAMI,aAAa,GAAGJ,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBe,GAA3C;AAEA,SAAKR,QAAL,CAAc;AACV,OAACL,aAAD,GAAiB;AAAEM,QAAAA,IAAI,EAAE;AAAR;AADP,KAAd;AAGH;;AACDQ,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,QAAQ,CAACY,gBAAT,CAA0B,OAA1B,EAAmC,KAAKpB,kBAAxC,EAA4D,IAA5D;AACH;;AAEDqB,EAAAA,oBAAoB,GAAG;AACnBb,IAAAA,QAAQ,CAACc,mBAAT,CAA6B,OAA7B,EAAsC,KAAKtB,kBAA3C,EAA+D,IAA/D;AACH;;AAoBDuB,EAAAA,MAAM,GAAG;AAEL,UAAMlB,aAAa,GAAG,KAAKO,KAAL,CAAW,KAAKb,KAAL,CAAWc,EAAtB,CAAtB;AAEA,QAAIF,IAAI,GAAGN,aAAa,CAACM,IAAd,GAAqB,kBAArB,GAA0C,aAArD;AAEA,UAAMa,WAAW,GAAG;AAAEX,MAAAA,EAAE,EAAE,KAAKd,KAAL,CAAWc,EAAjB;AAAqBY,MAAAA,SAAS,EAAEd;AAAhC,KAApB;AAEA,wBACI,6CAASa,WAAT;AAAsB,MAAA,GAAG,EAAE,KAAKV,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEA;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAE,KAAKE,UAAxC;AAAoD,kBAAU,KAAKjB,KAAL,CAAWc,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,KAAL,CAAW2B,IADhB,CALJ,eAQI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CAFJ,CADJ;AAeH;;AAvEwC;AA0E7C7B,KAAK,CAAC8B,SAAN,GAAkB;AACdd,EAAAA,EAAE,EAAEjB,SAAS,CAACgC,OAAV,CAAkBC,UADR;AAEdH,EAAAA,IAAI,EAAE9B,SAAS,CAACkC,MAAV,CAAiBD;AAFT,CAAlB","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n            [this.props.id]: false,\n        };\n\n        this.wrapperRef = React.createRef();\n\n        this.closeClick = this.closeClick.bind(this);\n    }\n\n    closeClick(event) {\n\n        const elementTarget = event.target.dataset.ref;\n\n        this.setState({\n            [elementTarget]: { show: false }\n        });\n    }\n    componentDidMount() {\n        document.addEventListener('click', this.handleClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClickOutside, true);\n    }\n\n    handleClickOutside = event => {\n\n        if (!event.target.dataset.target && !event.target.dataset.toggle) return false;\n\n        const elementTarget = event.target.dataset.target.substring(1);\n\n        const domNode = document.getElementById(elementTarget);\n\n        if (!domNode) {\n            this.setState({ [elementTarget]: { show: false } });\n\n            return false;\n        } else {\n            this.setState({ [elementTarget]: { show: true } });\n        }\n\n    }\n\n    render() {\n\n        const elementTarget = this.state[this.props.id];\n\n        let show = elementTarget.show ? 'modal flipX open' : 'modal flipX';\n\n        const renderClass = { id: this.props.id, className: show };\n\n        return (\n            <div {...renderClass} ref={this.wrapperRef}>\n                <div className=\"modal-backdrop\"></div>\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        Hello World\n                    <button className=\"close\" onClick={this.closeClick} data-ref={this.props.id}>&times;</button>\n                    </div>\n                    <div className=\"modal-body\">\n                        {this.props.body}\n                    </div>\n                    <div className=\"modal-footer\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nModal.propTypes = {\n    id: PropTypes.element.isRequired,\n    body: PropTypes.string.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}